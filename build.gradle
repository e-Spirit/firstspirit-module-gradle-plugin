/*
 * Copyright 2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'https://artifactory.e-spirit.de/artifactory/repo'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
}

apply plugin: 'groovy'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

description = 'Gradle plugin to build FirstSpirit modules (FSMs).'
group = 'com.espirit.moddev'
ext.artifactName = 'fsmgradleplugin'

repositories {
    mavenLocal()
    maven {
        url 'https://artifactory.e-spirit.de/artifactory/repo'
        credentials {
            username = "${artifactory_user}"
            password = "${artifactory_password}"
        }
    }
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'io.github.lukehutch:fast-classpath-scanner:2.6.2'
    compile 'com.espirit.moddev.components:annotations:1.8.2'
    compileOnly 'de.espirit.firstspirit:fs-isolated-runtime:5.2.1806'
    testCompile (
        'de.espirit.firstspirit:fs-isolated-runtime:5.2.1806',
		'junit:junit:4.12',
        'org.assertj:assertj-core:3.9.0',
		'org.hamcrest:hamcrest-all:1.3',
        'commons-io:commons-io:2.6'
    )
    testCompile gradleTestKit()
    testCompile 'org.mockito:mockito-core:2.15.0'
}

sourceSets {
    test {
        resources.srcDirs += ['src/test/resources']
        resources.srcDirs += ['src/main/resources']
    }
}

jar {
	manifest {
		attributes 'Implementation-Title': 'Gradle FSM plugin',
				   'Implementation-Version': version,
				   'Built-By': System.getProperty('user.name'),
				   'Built-Date': new Date(),
				   'Built-JDK': System.getProperty('java.version'),
				   'Built-Gradle': gradle.gradleVersion
	}
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'com.espirit.moddev'
            artifactId artifactName
            from components.java

            artifact sourceJar
            artifact packageJavadoc

            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'FSM Gradle plugin')
                root.appendNode('description', 'Gradle plugin to build FirstSpirit modules (FSMs).')
                root.appendNode('inceptionYear', '2013')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The Apache Software License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                license.appendNode('distribution', 'repo')

                def developers = root.appendNode('developers')
                def developer = developers.appendNode('developer')
                developer.appendNode('id', 'moritzzimmer')
                developer.appendNode('name', 'Moritz Zimmer')
                developer.appendNode('email', 'moritz.zmmr@gmail.com')

                developer = developers.appendNode('developer')
                developer.appendNode('id', 'e-spirit')
                developer.appendNode('name', 'E-Spirit AG')
                developer.appendNode('email', 'produktmanagement@e-spirit.com')
            }
        }
    }
    repositories {
        maven {
            credentials {
                username "${artifactory_user}"
                password "${artifactory_password}"
            }
            url "https://artifactory.e-spirit.de/artifactory/${((version.endsWith("SNAPSHOT")) ? {'plugins-snapshot-local'} : {'plugins-release-local'})()}"
        }
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier = 'javadoc'
}
task install(dependsOn: 'publishMavenJavaPublicationToMavenLocal', group:'publishing', description: 'Installs the maven Java artifact to the local Maven repository') {
    doLast {
        logger.info "Installed $project.name"
    }
}

task integrationTest() {
    dependsOn("jar")
}

task setVersion() {
    doFirst {
        if(!System.getProperties().containsKey("nextVersion")) {
            throw new IllegalStateException("Pass a nextVersion parameter")
        }
        Properties props = new Properties()
        File propsFile = new File('gradle.properties')
        props.load(propsFile.newDataInputStream())
        props.setProperty('version', System.getProperty("nextVersion"))
        props.store(propsFile.newWriter(), null)
        props.load(propsFile.newDataInputStream())
    }
}
